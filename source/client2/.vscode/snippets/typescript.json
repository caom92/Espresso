{
  "Standard Log Component": {
    "prefix": "fsm-log-component",
    "description": "Standard log component",
    "body": [
      "import { Component, Input } from '@angular/core'",
      "import { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms'",
      "import { Language } from 'angular-l10n'",
      "",
      "import { CustomValidators } from '../../../../directives/custom.validators'",
      "import { FormUtilService } from '../../../../services/form-util.service'",
      "import { LogService } from '../../../../services/log.service'",
      "import { DateTimeService } from '../../../../services/time.service'",
      "import { ToastsService } from '../../../../services/toasts.service'",
      "import { SuperLogComponent } from '../../super-logs/super.logs.log'",
      "import { Log } from '../interfaces/${prefix}-log.interface'",
      "import { maxLengths } from '../max-lengths/max-lengths'",
      "",
      "@Component({",
      "\tselector: '${prefix}-log',",
      "\ttemplateUrl: './${prefix}-log.component.html'",
      "})",
      "",
      "export class ${ClassName}LogComponent extends SuperLogComponent {",
      "\t@Input() log: Log = null",
      "\t@Language() lang: string",
      "",
      "\treadonly maxLengths = maxLengths",
      "",
      "\tconstructor(private _fb: FormBuilder, private timeService: DateTimeService, logService: LogService, toastService: ToastsService, formUtilService: FormUtilService) {",
      "\t\tsuper(logService, toastService, formUtilService)",
      "\t}",
      "",
      "\tngOnInit() {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tsuper.ngOnInit()",
      "\t}",
      "",
      "\tinitForm() {",
      "\t\tconst currentDate = this.timeService.getISODate()",
      "\t\tthis.captureForm = this._fb.group({",
      "\t\t\tdate: [currentDate, [Validators.required, CustomValidators.dateValidator()]],",
      "\t\t})",
      "\t}",
      "",
      "\tresetForm() {",
      "\t\tthis.captureForm.reset()",
      "\t}",
      "}"
    ]
  },
  "Partial Log Component": {
    "prefix": "fsm-partial-log-component",
    "description": "Partial log component",
    "body": [
      "import { Component, Input } from '@angular/core'",
      "import { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms'",
      "import { Language } from 'angular-l10n'",
      "",
      "import { CustomValidators } from '../../../../directives/custom.validators'",
      "import { FormUtilService } from '../../../../services/form-util.service'",
      "import { LogService } from '../../../../services/log.service'",
      "import { DateTimeService } from '../../../../services/time.service'",
      "import { ToastsService } from '../../../../services/toasts.service'",
      "import { SuperUpdateComponent } from '../../super-logs/super.logs.update'",
      "import { Log } from '../interfaces/${prefix}-log.interface'",
      "import { maxLengths } from '../max-lengths/max-lengths'",
      "",
      "@Component({",
      "\tselector: '${prefix}-log',",
      "\ttemplateUrl: './${prefix}-log.component.html'",
      "})",
      "",
      "export class ${ClassName}LogComponent extends SuperUpdateComponent {",
      "\t@Input() log: Log = null",
      "\t@Language() lang: string",
      "",
      "\treadonly maxLengths = maxLengths",
      "",
      "\tconstructor(private _fb: FormBuilder, private timeService: DateTimeService, logService: LogService, toastService: ToastsService, formUtilService: FormUtilService) {",
      "\t\tsuper(logService, toastService, formUtilService)",
      "\t}",
      "",
      "\tngOnInit() {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tsuper.ngOnInit()",
      "\t}",
      "",
      "\tinitForm() {",
      "\t\tconst currentDate = (this.log.creation_date !== undefined) ? this.log.creation_date : this.timeService.getISODate()",
      "\t\tthis.captureForm = this._fb.group({",
      "\t\t\tdate: [currentDate, [Validators.required, CustomValidators.dateValidator()]],",
      "\t\t})",
      "",
      "\t\tif (this.log.report_id != null && this.log.report_id != undefined) {",
      "\t\t\tthis.captureForm.addControl('report_id', new FormControl(this.log.report_id, []))",
      "\t\t}",
      "\t}",
      "",
      "\tresetForm() {",
      "\t\tthis.captureForm.reset()",
      "\t}",
      "}"
    ]
  },
  "Standard Log List Component": {
    "prefix": "fsm-log-list-component",
    "description": "Standard log list component",
    "body": [
      "import { Component } from '@angular/core'",
      "",
      "import { LogService } from '../../../../services/log.service'",
      "import { SuperLogListComponent } from '../../super-logs/super.logs.list'",
      "",
      "@Component({",
      "\tselector: '${prefix}-log-list',",
      "\ttemplateUrl: './${prefix}-log-list.component.html'",
      "})",
      "",
      "export class ${ClassName}LogList extends SuperLogListComponent {",
      "\t@Language() lang: string",
      "\t@DefaultLocale() defaultLocale: string",
      "",
      "\tconstructor(logService: LogService) {",
      "\t\tsuper(logService)",
      "\t}",
      "}"
    ]
  },
  "Standard Log Module": {
    "prefix": "fsm-log-module",
    "description": "Standard log module",
    "body": [
      "import { CommonModule } from '@angular/common'",
      "import { NgModule } from '@angular/core'",
      "import { ReactiveFormsModule } from '@angular/forms'",
      "import { LocalizationModule } from 'angular-l10n'",
      "import { MaterializeModule } from 'ngx-materialize'",
      "",
      "import { LogCommonModule } from '../log-common/log-common.module'",
      "import { ${ClassName}LogComponent } from './log/${prefix}-log.component'",
      "",
      "@NgModule({",
      "\timports: [",
      "\t\tLocalizationModule,",
      "\t\tReactiveFormsModule,",
      "\t\tMaterializeModule,",
      "\t\tLogCommonModule,",
      "\t\tCommonModule",
      "\t],",
      "\tdeclarations: [",
      "\t\t${ClassName}LogComponent",
      "\t],",
      "\texports: [",
      "\t\t${ClassName}LogComponent",
      "\t]",
      "})",
      "",
      "export class ${ClassName}LogModule { }",
      ""
    ]
  },
  "Standard Authorization Component": {
    "prefix": "fsm-authorization-component",
    "description": "Standard authorization component",
    "body": [
      "import { Component } from '@angular/core'",
      "import { FormBuilder, Validators } from '@angular/forms'",
      "import { ActivatedRoute, Router } from '@angular/router'",
      "",
      "import { CustomValidators } from '../../../../directives/custom.validators'",
      "import { LogService } from '../../../../services/log.service'",
      "import { ToastsService } from '../../../../services/toasts.service'",
      "import { SuperAuthorizationComponent } from '../../super-logs/super.logs.authorization'",
      "import { Authorization } from '../interfaces/${prefix}-authorization.interface'",
      "import { maxLengths } from '../max-lengths/max-lengths'",
      "",
      "@Component({",
      "\tselector: '${prefix}-authorization',",
      "\ttemplateUrl: './${prefix}-authorization.component.html'",
      "})",
      "",
      "export class ${ClassName}AuthorizationComponent extends SuperAuthorizationComponent {",
      "\t@Language() lang: string",
      "\tlog: Authorization",
      "\t",
      "\treadonly maxLengths = maxLengths",
      "",
      "\tconstructor(_fb: FormBuilder, logService: LogService, toastService: ToastsService, routeState: ActivatedRoute, router: Router) {",
      "\t\tsuper(_fb, logService, toastService, routeState, router)",
      "\t}",
      "",
      "\tngOnInit(): void {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tsuper.ngOnInit()",
      "\t}",
      "",
      "\tinitForm(): void {",
      "\t\tsuper.initForm()",
      "\t}",
      "}"
    ]
  },
  "Standard Authorization Module": {
    "prefix": "fsm-authorization-module",
    "description": "Standard authorization module",
    "body": [
      "import { CommonModule } from '@angular/common'",
      "import { NgModule } from '@angular/core'",
      "import { ReactiveFormsModule } from '@angular/forms'",
      "import { LocalizationModule } from 'angular-l10n'",
      "import { MaterializeModule } from 'ngx-materialize'",
      "",
      "import { LogCommonModule } from '../log-common/log-common.module'",
      "import { ${ClassName}AuthorizationComponent } from './authorization/${prefix}-authorization.component'",
      "import { ${ClassName}LogModule } from './${prefix}-log.module'",
      "import { ${ClassName}AuthorizationRoutingModule } from './routing.module'",
      "",
      "@NgModule({",
      "\timports: [",
      "\t\tLocalizationModule,",
      "\t\tReactiveFormsModule,",
      "\t\tMaterializeModule,",
      "\t\t${ClassName}AuthorizationRoutingModule,",
      "\t\tCommonModule,",
      "\t\tLogCommonModule,",
      "\t\t${ClassName}LogModule",
      "\t],",
      "\tdeclarations: [",
      "\t\t${ClassName}AuthorizationComponent",
      "\t],",
      "\texports: [",
      "\t\t${ClassName}AuthorizationComponent",
      "\t]",
      "})",
      "",
      "export class ${ClassName}AuthorizationModule { }",
      ""
    ]
  },
  "Standard Authorization Routing Module": {
    "prefix": "fsm-authorization-routing-module",
    "description": "Standard authorization routing module",
    "body": [
      "import { NgModule } from '@angular/core'",
      "import { RouterModule, Routes } from '@angular/router'",
      "",
      "import { ${ClassName}AuthorizationComponent } from './authorization/${prefix}-authorization.component'",
      "",
      "const routes: Routes = [",
      "\t{ path: ':report_id', component: ${ClassName}AuthorizationComponent },",
      "\t{ path: '**', redirectTo: '/pending-authorizations-list' }",
      "]",
      "",
      "@NgModule({",
      "\timports: [ RouterModule.forChild(routes) ],",
      "\texports: [ RouterModule ]",
      "})",
      "",
      "export class ${ClassName}AuthorizationRoutingModule { }"
    ]
  },
  "Standard Capture Component": {
    "prefix": "fsm-capture-component",
    "description": "Standard capture component",
    "body": [
      "import { Component } from '@angular/core'",
      "import { ActivatedRoute } from '@angular/router'",
      "import { PubSubService } from 'angular2-pubsub'",
      "",
      "import { LogService } from '../../../../services/log.service'",
      "import { SuperCapture } from '../../super-capture/super.capture'",
      "",
      "@Component({",
      "\tselector: '${prefix}-capture',",
      "\ttemplateUrl: './${prefix}-capture.component.html'",
      "})",
      "",
      "export class ${ClassName}CaptureComponent extends SuperCapture {",
      "\tconstructor(routeState: ActivatedRoute, logService: LogService, events: PubSubService) {",
      "\t\tsuper(routeState, logService, events)",
      "\t}",
      "}"
    ]
  },
  "Partial Capture Component": {
    "prefix": "fsm-partial-capture-component",
    "description": "Partial capture component",
    "body": [
      "import { Component } from '@angular/core'",
      "import { ActivatedRoute } from '@angular/router'",
      "import { PubSubService } from 'angular2-pubsub'",
      "",
      "import { LogService } from '../../../../services/log.service'",
      "import { Log } from '../../../logs/${prefix}/interfaces/${prefix}-log.interface'",
      "import { SuperPartialCapture } from '../../super-capture/super.partial.capture'",
      "",
      "@Component({",
      "\tselector: '${prefix}-capture',",
      "\ttemplateUrl: './${prefix}-capture.component.html'",
      "})",
      "",
      "export class ${ClassName}CaptureComponent extends SuperPartialCapture {",
      "\tlogData: Log = null",
      "",
      "\tconstructor(routeState: ActivatedRoute, logService: LogService, events: PubSubService) {",
      "\t\tsuper(routeState, logService, events)",
      "\t}",
      "}"
    ]
  },
  "Standard Capture Module": {
    "prefix": "fsm-capture-module",
    "description": "Standard Capture Module",
    "body": [
      "import { CommonModule } from '@angular/common'",
      "import { NgModule } from '@angular/core'",
      "import { LocalizationModule } from 'angular-l10n'",
      "import { MaterializeModule } from 'ngx-materialize'",
      "",
      "import { ${ClassName}LogModule } from '../../logs/${prefix}/${prefix}-log.module'",
      "import { ManualModule } from '../../manual/manual.module'",
      "import { ${ClassName}ReportModule } from '../../reports/${prefix}/${prefix}-report.module'",
      "import { ${ClassName}CaptureComponent } from './capture/${prefix}-capture.component'",
      "import { ${ClassName}CaptureRoutingModule } from './routing.module'",
      "",
      "@NgModule({",
      "\timports: [",
      "\t\tLocalizationModule,",
      "\t\tMaterializeModule,",
      "\t\t${ClassName}CaptureRoutingModule,",
      "\t\t${ClassName}LogModule,",
      "\t\t${ClassName}ReportModule,",
      "\t\tManualModule,",
      "\t\tCommonModule",
      "\t],",
      "\tdeclarations: [",
      "\t\t${ClassName}CaptureComponent",
      "\t]",
      "})",
      "",
      "export class ${ClassName}CaptureModule { }",
      ""
    ]
  },
  "Standard Capture Routing Module": {
    "prefix": "fsm-capture-routing-module",
    "description": "Standard capture routing module",
    "body": [
      "import { NgModule } from '@angular/core'",
      "import { RouterModule, Routes } from '@angular/router'",
      "",
      "import { ${ClassName}CaptureComponent } from './capture/${prefix}-capture.component'",
      "",
      "const routes: Routes = [",
      "\t{ path: '', component: ${ClassName}CaptureComponent }",
      "]",
      "",
      "@NgModule({",
      "\timports: [ RouterModule.forChild(routes) ],",
      "\texports: [ RouterModule ]",
      "})",
      "",
      "export class ${ClassName}CaptureRoutingModule { }"
    ]
  },
  "Standard Report Interface": {
    "prefix": "fsm-report-interface",
    "description": "Standard report interface",
    "body": [
      "import { SuperReportInterface } from '../../super-report/super.report.interface'",
      "",
      "export interface Report extends SuperReportInterface {",
      "\t$0",
      "}"
    ]
  },
  "Standard Report Viewer Component": {
    "prefix": "fsm-report-viewer-component",
    "description": "Standard report viewer component",
    "body": [
      "import { Component } from '@angular/core'",
      "import { FormBuilder } from '@angular/forms'",
      "import { ActivatedRoute } from '@angular/router'",
      "",
      "import { ReportService } from '../../../../services/report.service'",
      "import { DateTimeService } from '../../../../services/time.service'",
      "import { SuperReportViewer } from '../../super-report/super.report.viewer'",
      "",
      "@Component({",
      "\tselector: '${prefix}-report-viewer',",
      "\ttemplateUrl: '${prefix}-report-viewer.component.html'",
      "})",
      "",
      "export class ${ClassName}ReportViewerComponent extends SuperReportViewer {",
      "\tconstructor(routeState: ActivatedRoute, formBuilder: FormBuilder, reportService: ReportService, timeService: DateTimeService) {",
      "\t\tsuper(routeState, formBuilder, reportService, timeService)",
      "\t}",
      "}"
    ]
  },
  "Standard Report Loader Component": {
    "prefix": "fsm-report-loader-component",
    "description": "Standard report loader component",
    "body": [
      "import { Component } from '@angular/core'",
      "",
      "import { LogService } from '../../../../services/log.service'",
      "import { SuperReportLoader } from '../../super-report/super.report.loader'",
      "",
      "@Component({",
      "\tselector: '${prefix}-report-loader',",
      "\ttemplateUrl: '${prefix}-report-loader.component.html'",
      "})",
      "",
      "export class ${ClassName}ReportLoaderComponent extends SuperReportLoader {",
      "\tconstructor(logService: LogService) {",
      "\t\tsuper(logService)",
      "\t}",
      "}"
    ]
  },
  "Standard Report Component": {
    "prefix": "fsm-report-component",
    "description": "Standard report component",
    "body": [
      "import { Component, Input, ViewChild } from '@angular/core'",
      "import { Language, TranslationService } from 'angular-l10n'",
      "",
      "import { SuperReportComponent } from '../../super-report/super.report'",
      "import { Report } from '../interfaces/${prefix}-report.interface'",
      "",
      "@Component({",
      "\tselector: '${prefix}-report',",
      "\ttemplateUrl: './${prefix}-report.component.html'",
      "})",
      "",
      "export class ${ClassName}ReportComponent extends SuperReportComponent {",
      "\t@Input() report: Report",
      "\t@Language() lang: string",
      "\t@ViewChild('report_body') reportHTML: any",
      "",
      "\tconstructor(translationService: TranslationService) {",
      "\t\tsuper(translationService)",
      "\t}",
      "",
      "\tpublic getCSS(appendCSS?: string): string {",
      "\t\treturn '<style>' + this.commonCSS() + ((appendCSS === String(appendCSS)) ? appendCSS : '') + '</style>'",
      "\t}",
      "}"
    ]
  },
  "Standard Report Module": {
    "prefix": "fsm-report-module",
    "description": "Standard report module",
    "body": [
      "import { CommonModule } from '@angular/common'",
      "import { NgModule } from '@angular/core'",
      "import { ReactiveFormsModule } from '@angular/forms'",
      "import { LocalizationModule } from 'angular-l10n'",
      "import { MaterializeModule } from 'ngx-materialize'",
      "",
      "import { ReportCommonModule } from '../report-common/report-common.module'",
      "import { ${ClassName}ReportLoaderComponent } from './loader/${prefix}-report-loader.component'",
      "import { ${ClassName}ReportComponent } from './report/${prefix}-report.component'",
      "import { ${ClassName}ReportViewerComponent } from './viewer/${prefix}-report-viewer.component'",
      "",
      "@NgModule({",
      "\timports: [",
      "\t\tLocalizationModule,",
      "\t\tReactiveFormsModule,",
      "\t\tMaterializeModule,",
      "\t\tReportCommonModule,",
      "\t\tCommonModule",
      "\t],",
      "\tdeclarations: [",
      "\t\t${ClassName}ReportViewerComponent,",
      "\t\t${ClassName}ReportLoaderComponent,",
      "\t\t${ClassName}ReportComponent",
      "\t],",
      "\texports: [",
      "\t\t${ClassName}ReportViewerComponent",
      "\t]",
      "})",
      "",
      "export class ${ClassName}ReportModule { }",
      ""
    ]
  },
  "Standard Inventory Component": {
    "prefix": "fsm-inventory",
    "description": "Standard inventory component",
    "body": [
      "import { Component, Input } from '@angular/core'",
      "import { PubSubService } from 'angular2-pubsub'",
      "import { DragulaService } from 'ng2-dragula'",
      "",
      "import { InventoryService } from '../../../../services/inventory.service'",
      "import { SuperInventoryComponent } from '../../super-inventory/super.inventory'",
      "import { InventoryItem } from '../interfaces/${prefix}-inventory.interface'",
      "",
      "@Component({",
      "\tselector: '${prefix}-inventory',",
      "\ttemplateUrl: './${prefix}-inventory.component.html'",
      "})",
      "",
      "export class ${ClassName}InventoryComponent extends SuperInventoryComponent {",
      "\t@Language() lang: string",
      "\t@Input() inventory: Array<InventoryItem> = []",
      "",
      "\tconstructor(events: PubSubService,",
      "\t\tinventoryService: InventoryService,",
      "\t\tdragulaService: DragulaService) {",
      "\t\tsuper(dragulaService, events, inventoryService)",
      "\t}",
      "",
      "\tpublic ngOnInit(): void {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tthis.setBagName(this.suffix + '-bag')",
      "\t\tsuper.ngOnInit()",
      "\t}",
      "",
      "\tpublic onInventoryUpdate(): void {",
      "\t\t// Se debe reimplmentar para evitar que se lance la excepción",
      "\t}",
      "",
      "\tpublic checkEmptyInventory(): boolean {",
      "\t\tthis.emptyInventoryFlag = this.inventory.length == 0",
      "\t\treturn this.inventory.length == 0",
      "\t}",
      "",
      "\tpublic initDragula(): void {",
      "\t\tthis.addGroup(this.bagName)",
      "\t}",
      "}"
    ]
  },
  "Standard Add Item Component": {
    "prefix": "fsm-add-item",
    "description": "Standard add item component",
    "body": [
      "import { Component, OnInit } from '@angular/core'",
      "import { FormBuilder, FormGroup, Validators } from '@angular/forms'",
      "import { PubSubService } from 'angular2-pubsub'",
      "",
      "import { FormUtilService } from '../../../../services/form-util.service'",
      "import { InventoryService } from '../../../../services/inventory.service'",
      "import { ToastsService } from '../../../../services/toasts.service'",
      "import { SuperInventoryAddItemComponent } from '../../super-inventory/super.inventory.add.item'",
      "",
      "@Component({",
      "\tselector: '[${prefix}-add-item]',",
      "\ttemplateUrl: './${prefix}-add-item.component.html'",
      "})",
      "",
      "export class ${ClassName}AddItemComponent extends SuperInventoryAddItemComponent implements OnInit {",
      "\t@Language() lang: string",
      "\tnewItem: FormGroup = new FormBuilder().group({})",
      "",
      "\tconstructor(_fb: FormBuilder, inventoryService: InventoryService, events: PubSubService, toastService: ToastsService, formUtilService: FormUtilService) {",
      "\t\tsuper(_fb, inventoryService, events, toastService, formUtilService)",
      "\t}",
      "",
      "\tpublic ngOnInit(): void {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tthis.createItemForm({",
      "\t\t\tname: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(255)]],",
      "\t\t})",
      "\t}",
      "",
      "\tpublic addItem(): void {",
      "\t\tlet data = { item: { id: 0, is_active: 1, name: this.newItem.value.name, position: 0 } }",
      "\t\tlet itemData = { name: this.newItem.value.name }",
      "\t\tsuper.addItem(data, itemData)",
      "\t}",
      "}"
    ]
  },
  "Standard Inventory Viewer Component": {
    "prefix": "fsm-inventory-viewer",
    "description": "Standard inventory viewer component",
    "body": [
      "import { Component } from '@angular/core'",
      "import { ActivatedRoute } from '@angular/router'",
      "",
      "import { LogService } from '../../../../services/log.service'",
      "import { SuperInventoryViewer } from '../../super-inventory/super.inventory.viewer'",
      "",
      "@Component({",
      "\tselector: '${prefix}-inventory-viewer',",
      "\ttemplateUrl: './${prefix}-inventory-viewer.component.html'",
      "})",
      "",
      "export class ${ClassName}InventoryViewerComponent extends SuperInventoryViewer {",
      "\t@Language() lang: string",
      "",
      "\tconstructor(routeState: ActivatedRoute, logService: LogService) {",
      "\t\tsuper(routeState, logService)",
      "\t}",
      "}"
    ]
  },
  "Standard Inventory List Component": {
    "prefix": "fsm-inventory-list",
    "description": "Standard inventory list component",
    "body": [
      "import { Component, Input } from '@angular/core'",
      "import { PubSubService } from 'angular2-pubsub'",
      "import { DragulaService } from 'ng2-dragula'",
      "",
      "import { InventoryService } from '../../../../services/inventory.service'",
      "import { SuperInventoryListComponent } from '../../super-inventory/super.inventory.list'",
      "import { InventoryItem } from '../interfaces/${prefix}-inventory.interface'",
      "",
      "@Component({",
      "\tselector: '[${prefix}-inventory-list]',",
      "\ttemplateUrl: './${prefix}-inventory-list.component.html'",
      "})",
      "",
      "export class ${ClassName}InventoryListComponent extends SuperInventoryListComponent {",
      "\t@Language() lang: string",
      "\t@Input() items: Array<InventoryItem>",
      "",
      "\tconstructor(dragulaService: DragulaService, events: PubSubService, inventoryService: InventoryService) {",
      "\t\tsuper(dragulaService, events, inventoryService)",
      "\t}",
      "",
      "\tpublic ngOnInit(): void {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tthis.setBagName(this.suffix + '-bag')",
      "\t\tsuper.ngOnInit()",
      "\t}",
      "",
      "\tpublic onItemAdd(item: any): void {",
      "\t\titem.item.position = this.getCurrentInventory().length + 1",
      "\t\tthis.getCurrentInventory().push(item.item)",
      "\t}",
      "",
      "\tpublic getCurrentInventory(): Array<InventoryItem> {",
      "\t\treturn this.items",
      "\t}",
      "}"
    ]
  },
  "Standard Inventory Item Component": {
    "prefix": "fsm-inventory-item",
    "description": "Standard Inventory Item Component",
    "body": [
      "import { Component, Input, OnInit } from '@angular/core'",
      "",
      "import { InventoryService } from '../../../../services/inventory.service'",
      "import { SuperInventoryItemComponent } from '../../super-inventory/super.inventory.item'",
      "import { InventoryItem } from '../interfaces/${prefix}-inventory.interface'",
      "",
      "@Component({",
      "\tselector: '[${prefix}-inventory-item]',",
      "\ttemplateUrl: './${prefix}-inventory-item.component.html'",
      "})",
      "",
      "export class ${ClassName}InventoryItemComponent extends SuperInventoryItemComponent implements OnInit {",
      "\t@Language() lang: string",
      "\t@Input() item: InventoryItem",
      "",
      "\tconstructor(inventoryService: InventoryService) {",
      "\t\tsuper(inventoryService)",
      "\t}",
      "",
      "\tpublic ngOnInit(): void {",
      "\t\tthis.setSuffix('${prefix}')",
      "\t\tthis.setToggleValue(this.item.is_active == 1)",
      "\t}",
      "}"
    ]
  },
  "Standard Inventory Module": {
    "prefix": "fsm-inventory-module",
    "description": "Standard inventory module",
    "body": [
      "import { CommonModule } from '@angular/common'",
      "import { NgModule } from '@angular/core'",
      "import { ReactiveFormsModule } from '@angular/forms'",
      "import { LocalizationModule } from 'angular-l10n'",
      "import { DragulaModule } from 'ng2-dragula'",
      "import { MaterializeModule } from 'ngx-materialize'",
      "",
      "import { ${ClassName}AddItemComponent } from './add-item/${prefix}-add-item.component'",
      "import { ${ClassName}InventoryComponent } from './inventory/${prefix}-inventory.component'",
      "import { ${ClassName}InventoryItemComponent } from './item/${prefix}-inventory-item.component'",
      "import { ${ClassName}InventoryListComponent } from './list/${prefix}-inventory-list.component'",
      "import { ${ClassName}InventoryViewerComponent } from './viewer/${prefix}-inventory-viewer.component'",
      "import { ${ClassName}InventoryRoutingModule } from './routing.module'",
      "",
      "@NgModule({",
      "\timports: [",
      "\t\tLocalizationModule,",
      "\t\tReactiveFormsModule,",
      "\t\tMaterializeModule,",
      "\t\tDragulaModule,",
      "\t\t${ClassName}InventoryRoutingModule,",
      "\t\tCommonModule",
      "\t],",
      "\tdeclarations: [",
      "\t\t${ClassName}InventoryComponent,",
      "\t\t${ClassName}InventoryItemComponent,",
      "\t\t${ClassName}InventoryListComponent,",
      "\t\t${ClassName}AddItemComponent,",
      "\t\t${ClassName}InventoryViewerComponent",
      "\t]",
      "})",
      "",
      "export class ${ClassName}InventoryModule { }"
    ]
  },
  "Standard Inventory Routing Module": {
    "prefix": "fsm-inventory-routing-module",
    "description": "Standard inventory routing module",
    "body": [
      "import { NgModule } from '@angular/core'",
      "import { RouterModule, Routes } from '@angular/router'",
      "",
      "import { ${ClassName}InventoryViewerComponent } from './viewer/${prefix}-inventory-viewer.component'",
      "",
      "const routes: Routes = [",
      "\t{ path: '', component: ${ClassName}InventoryViewerComponent }",
      "]",
      "",
      "@NgModule({",
      "\timports: [ RouterModule.forChild(routes) ],",
      "\texports: [ RouterModule ]",
      "})",
      "",
      "export class ${ClassName}InventoryRoutingModule { }"
    ]
  },
  "Standard Log Interface": {
    "prefix": "fsm-log-interface",
    "description": "Standard log interface",
    "body": [
      "import { SuperLog } from '../../super-logs/super.logs.log.interface'",
      "",
      "export interface Log extends SuperLog {",
      "\t$0",
      "}"
    ]
  },
  "Standard Capture Interface": {
    "prefix": "fsm-capture-interface",
    "description": "Standard capture interface",
    "body": [
      "import { SuperCaptureLog } from '../../super-logs/super.logs.capture.interface'",
      "",
      "export interface CaptureLog extends SuperCaptureLog {",
      "\t$0",
      "}"
    ]
  },
  "Standard Authorization Interface": {
    "prefix": "fsm-authorization-interface",
    "description": "Standard authorization interface",
    "body": [
      "import { SuperAuthorization } from '../../super-logs/super.logs.authorization.interface'",
      "",
      "export interface Authorization extends SuperAuthorization {",
      "\t$0",
      "}"
    ]
  },
  "Standard Update Interface": {
    "prefix": "fsm-update-interface",
    "description": "Standard update interface",
    "body": [
      "import { SuperUpdateLog } from '../../super-logs/super.logs.update.interface'",
      "",
      "export interface UpdateLog extends SuperUpdateLog {",
      "\t$0",
      "}"
    ]
  },
  "Standard Inventory Interface": {
    "prefix": "fsm-inventory-interface",
    "description": "Standard inventory interface",
    "body": [
      "import { SuperInventoryItemInterface } from '../../super-inventory/super.inventory.interface'",
      "",
      "export interface InventoryItem extends SuperInventoryItemInterface {",
      "\t",
      "}"
    ]
  },
  "Standard Max Length": {
    "prefix": "fsm-max-length",
    "description": "Standard max length",
    "body": [
      "export const maxLengths = {",
      "\t",
      "}"
    ]
  },
  "Authorization routing module entry": {
    "prefix": "fsm-authorization-routing-module-entry",
    "description": "description",
    "body": [
      "{",
      "\tpath: '${prefix}',",
      "\tdata: { suffix: '${prefix}' },",
      "\tloadChildren: './${prefix}/${prefix}-authorization.module#${ClassName}AuthorizationModule'",
      "}"
    ]
  },
  "Capture routing module entry": {
    "prefix": "fsm-capture-routing-module-entry",
    "description": "description",
    "body": [
      "{",
      "\tpath: '${prefix}',",
      "\tdata: { suffix: '${prefix}' },",
      "\tloadChildren: './${prefix}/${prefix}-capture.module#${ClassName}CaptureModule'",
      "}"
    ]
  },
  "Inventory Routing Module Entry": {
    "prefix": "fsm-inventory-routing-module-entry",
    "description": "Inventory routing module entry",
    "body": [
      "{",
      "\tpath: '${prefix}',",
      "\tdata: { suffix: '${prefix}' },",
      "\tloadChildren: './${prefix}/${prefix}-inventory.module#${ClassName}InventoryModule'",
      "}"
    ]
  }
}