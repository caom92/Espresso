include ../../../log-ionic-materialize.pug

+fullLogWrapper()
  div(*ngIf="showLog == true")
    log-header([log]="logHeaderData")
    form((ngSubmit)='save(myForm)', id='aged_product')
      +card(true)(*ngFor="let entry of captureForm.controls.entries.controls; let i = index")
        +cardContent()([formGroup]="captureForm.controls.entries.controls[i]")
          +row()
            +col()(class='s6 m6 l6')
              +textInput("Batch", false, "batch", "text", "batch_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.batch.valid && captureForm.controls.entries.controls[i].controls.batch.value.length > maxLengths.batch", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.batch.valid && captureForm.controls.entries.controls[i].controls.batch.dirty && captureForm.controls.entries.controls[i].controls.batch.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textInput("Production Area", false, "production_area_id", "text", "production_area_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.production_area_id.valid && captureForm.controls.entries.controls[i].controls.production_area_id.value.length > maxLengths.production_area_id", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.production_area_id.valid && captureForm.controls.entries.controls[i].controls.production_area_id.dirty && captureForm.controls.entries.controls[i].controls.production_area_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +textInput("Suppliers", false, "supplier_id", "text", "vendor_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.supplier_id.valid && captureForm.controls.entries.controls[i].controls.supplier_id.value.length > maxLengths.supplier_id", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.supplier_id.valid && captureForm.controls.entries.controls[i].controls.supplier_id.dirty && captureForm.controls.entries.controls[i].controls.supplier_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("Products", false, "product_id", "text", "item_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.product_id.valid && captureForm.controls.entries.controls[i].controls.product_id.value.length > maxLengths.product_id", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.product_id.valid && captureForm.controls.entries.controls[i].controls.product_id.dirty && captureForm.controls.entries.controls[i].controls.product_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("Customers", false, "customer_id", "text", "origin_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.customer_id.valid && captureForm.controls.entries.controls[i].controls.customer_id.value.length > maxLengths.customer_id", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.customer_id.valid && captureForm.controls.entries.controls[i].controls.customer_id.dirty && captureForm.controls.entries.controls[i].controls.customer_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +select("Quality", null, "quality_type_id", null, "quality_{{i + 1}}", "'Quality'")
                +option("{{quality.name}}", "quality.id", null, false)(*ngFor='let quality of log.log_info.quality_types')
            +col()(class='s4 m4 l4')
              +textInput("Origin", false, "origin", "text", "origin_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.origin.valid && captureForm.controls.entries.controls[i].controls.origin.value.length > maxLengths.origin", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.origin.valid && captureForm.controls.entries.controls[i].controls.origin.dirty && captureForm.controls.entries.controls[i].controls.origin.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +dateInput(false, "Date of packing", "expiration_date", "date_{{i + 1}}", null, "langManager.messages.global.datePickerConfig")
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.expiration_date.valid && captureForm.controls.entries.controls[i].controls.expiration_date.value.length > maxLengths.expiration_date", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.expiration_date.valid && captureForm.controls.entries.controls[i].controls.expiration_date.dirty && captureForm.controls.entries.controls[i].controls.expiration_date.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s6 m6 l6')
              +textInput("Washing water temperature (°F)", false, "water_temperature", "number", "water_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.water_temperature.valid && captureForm.controls.entries.controls[i].controls.water_temperature.value.length > maxLengths.water_temperature", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.water_temperature.valid && captureForm.controls.entries.controls[i].controls.water_temperature.dirty && captureForm.controls.entries.controls[i].controls.water_temperature.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textInput("Packed product temperature (°F)", false, "product_temperature", "number", "packed_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.product_temperature.valid && captureForm.controls.entries.controls[i].controls.product_temperature.value.length > maxLengths.product_temperature", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.product_temperature.valid && captureForm.controls.entries.controls[i].controls.product_temperature.dirty && captureForm.controls.entries.controls[i].controls.product_temperature.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +radioGroup("Correct weight?", false, "is_weight_correct")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "correct_weight_yes_{{i + 1}}", "weight_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_weight_correct', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "correct_weight_no_{{i + 1}}", "weight_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_weight_correct', [value]='false')
            +col()(class='s4 m4 l4')
              +radioGroup("Correct label?", false, "is_label_correct")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "label_yes_{{i + 1}}", "label_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_label_correct', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "label_no_{{i + 1}}", "label_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_label_correct', [value]='false')
            +col()(class='s4 m4 l4')
              +radioGroup("Traceability", false, "is_trackable")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "traceability_yes_{{i + 1}}", "traceable_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_trackable', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "traceability_no_{{i + 1}}", "traceable_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_trackable', [value]='false')
          +row()
            +col()(class='s6 m6 l6')
              +textArea("Comment", false, "notes", "notes_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.notes.valid && captureForm.controls.entries.controls[i].controls.notes.value.length > maxLengths.notes", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.notes.valid && captureForm.controls.entries.controls[i].controls.notes.dirty && captureForm.controls.entries.controls[i].controls.notes.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textArea("External link", false, "album_url", "album_url_{{i + 1}}", null)
              //-+errorMessage("!captureForm.controls.entries.controls[i].controls.album_url.valid && captureForm.controls.entries.controls[i].controls.album_url.value.length > maxLengths.album_url", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.album_url.valid && captureForm.controls.entries.controls[i].controls.album_url.dirty && captureForm.controls.entries.controls[i].controls.album_url.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
      block entryControls
        +row()
          +col()(class="s1 m1 l1 offset-s10 offset-m10 offset-l10")
            button.green(mz-button, type='button', float='true', (click)='addEntry()')
              i(mz-icon-mdi, [icon]="'plus'")
          +col()(class="s1 m1 l1")
            button.red(mz-button, type='button', float='true', (click)='removeEntry()', [disabled]="captureForm.controls.entries.controls.length <= 1")
              i(mz-icon-mdi, [icon]="'minus'")
      block buttonRow
        +sendLogButton("{{ 'Log.send_report' | translate:lang }}")(form="aged_product")
