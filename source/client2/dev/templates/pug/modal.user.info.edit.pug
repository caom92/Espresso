extends modal.user.info.pug
include globals.pug

block Password

block Username&PasswordEdit
  mz-collapsible(
    '[mode]'="'accordion'"
  )
    +accordionItem(
      '{{ langManager.messages.editPasswordFormLabels.title }}', 
      'mdi mdi-lock'
    )
      form(
        '[formGroup]'='passwordEditionForm'
        '(ngSubmit)'='onPasswordEditionFormSubmit()'
        novalidate
      )
        +passwordInput(
          'new-password', 
          "langManager.messages.editPasswordFormLabels.newPassword"
        )(
          formControlName='newPassword'
          required
          mz-validation
          '[errorMessageResource]'='langManager.messages.editPasswordForm.newPassword'
        )
        +passwordInput(
          'new-password-confirmation', 
          "langManager.messages.editPasswordFormLabels.newPasswordConfirmation"
        )(
          formControlName='newPasswordConfirmation'
          required
          mz-validation
          '[errorMessageResource]'='langManager.messages.editPasswordForm.newPasswordConfirmation'
        )
        +passwordInput(
          'old-password', 
          "langManager.messages.editPasswordFormLabels.oldPassword"
        )(
          formControlName='oldPassword'
          required
          mz-validation
          '[errorMessageResource]'='langManager.messages.editPasswordForm.oldPassword'
        )
        +button(
          'submit', 
          'editPasswordSubmit', 
          '{{ langManager.messages.editPasswordFormLabels.submit }}', 
          'mdi mdi-send'
        )(
          '[disabled]'="!passwordEditionForm.valid"
        )
        div.invalid.red-text(
          '*ngIf'="passwordEditionForm.hasError('arePasswordsDifferent')"
          style='font-size: 0.8rem;'
        )
          ='{{ langManager.messages.editPasswordFormLabels.error }}'
    +accordionItem(
      '{{ langManager.messages.editUsernameFormLabels.title }}', 
      'mdi mdi-account'
    )
      form(
        '[formGroup]'='usernameEditionForm'
        '(ngSubmit)'='onUsernameEditionFormSubmit()'
        novalidate
      )
        +textInput(
          'new-username', 
          "langManager.messages.editUsernameFormLabels.newUsername"
        )(
          formControlName='newUsername'
          required
          mz-validation
          '[errorMessageResource]'='langManager.messages.editUsernameForm.newUsername'
        )
        +passwordInput(
          'password', 
          "langManager.messages.editUsernameFormLabels.password"
        )(
          formControlName='password'
          required
          mz-validation
          '[errorMessageResource]'='langManager.messages.editUsernameForm.password'
        )
        +button(
          'submit', 
          'editUsernameSubmit', 
          '{{ langManager.messages.editUsernameFormLabels.submit }}', 
          'mdi mdi-send'
        )(
          '[disabled]'="!usernameEditionForm.valid"
        )

block SubmitButton
  +button(
    'submit',
    'edit-user-submit',
    '{{ langManager.messages.editPasswordFormLabels.submit }}',
    'mdi mdi-send'
  )(
    '[disabled]'='!userForm.valid'
    '(click)'='onEditFormSubmit()'
  )

block Privileges
  ng-container('*ngFor'='let program of programs')  
    div.row('[hidden]'='selectedProgram.name != program.name')
      div.col.s12
        mz-collapsible
          mz-collapsible-item('*ngFor'='let module of program.modules')
            mz-collapsible-item-header
              ='{{ module.name }}'
            mz-collapsible-item-body
              table.highlight&attributes(attributes)
                thead
                  th
                    ='{{ langManager.messages.usersFormLabels.logsTableHeaders[0] }}'
                  th
                    ='{{ langManager.messages.usersFormLabels.logsTableHeaders[1] }}'
                  th
                    ='{{ langManager.messages.usersFormLabels.logsTableHeaders[2] }}'
                  th('*ngIf'='selectedRole.name === "Employee"')
                    ='{{ langManager.messages.usersFormLabels.logsTableHeaders[3] }}'
                tbody
                  tr('*ngFor'='let log of module.logs')
                    td='{{ log.name }}'
                    td: +radioButton(
                      '{{ "none-" + log.id }}', 
                      '{{ log.name }}'
                    )(
                      name='{{ "privilege-" + log.id }}'
                      '[value]'='privileges[0].id'
                      '[(ngModel)]'='selectedPrivileges[log.name].privilegeID'
                    )
                    td: +radioButton(
                      '{{ "read-" + log.id }}',
                      '{{ log.name }}'
                    )(
                      name='{{ "privilege-" + log.id }}'
                      '[value]'='privileges[1].id'
                      '[(ngModel)]'='selectedPrivileges[log.name].privilegeID'
                    )
                    td: +radioButton(
                      '{{ "write-" + log.id }}', 
                      '{{ log.name }}'
                    )(
                      '*ngIf'='selectedRole.name === "Employee"'
                      name='{{ "privilege-" + log.id }}'
                      '[value]'='privileges[2].id'
                      '[(ngModel)]'='selectedPrivileges[log.name].privilegeID'
                    )