include ../../../log-ionic-materialize.pug

+fullLogWrapper()
  div(*ngIf="showLog == true")
    log-header([log]="logHeaderData")
    form([formGroup]='captureForm', (ngSubmit)='save(myForm)')
      +card(true)
        +cardContent()
          +row()
            +col()(class='s4 m4 l4')
              +select("Shift", null, "shift_id", null, "shift", "'Shift'")
                +option("{{shift.name}}", "shift.shift_id", null, false)(*ngFor='let shift of log.items.shifts; let first = first')
              +errorMessage("!captureForm.controls.shift_id.valid && captureForm.controls.shift_id.dirty", "null shift")
            +col()(class='s4 m4 l4')
              +timeInput(true, "Time", "time", "time", null, "langManager.messages.global.timePickerConfig")
              +errorMessage("!captureForm.controls.time.valid", "{{ 'LogErrors.generic.time_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +dateInput(true, "Date of occurrence", "incident_date", "date", null, "langManager.messages.global.datePickerConfig")
              +errorMessage("!captureForm.controls.incident_date.valid", "{{ 'LogErrors.generic.date_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +textInput("Production area", false, "area_id", "text", "production_area", null)([length]="maxLengths.area_id")
              +errorMessage("!captureForm.controls.area_id.valid && captureForm.controls.area_id.value.length > maxLengths.area_id", "{{ 'LogErrors.gap-others-unusual-occurrence.area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.area_id.valid && captureForm.controls.area_id.dirty && captureForm.controls.area_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("Product", false, "product_id", "text", "product", null)([length]="maxLengths.product_id")
              +errorMessage("!captureForm.controls.product_id.valid && captureForm.controls.product_id.value.length > maxLengths.product_id", "{{ 'LogErrors.gap-others-unusual-occurrence.product_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.product_id.valid && captureForm.controls.product_id.dirty && captureForm.controls.product_id.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("Batch", false, "batch", "text", "batch", null)([length]="maxLengths.batch")
              +errorMessage("!captureForm.controls.batch.valid && captureForm.controls.batch.value.length > maxLengths.batch", "{{ 'LogErrors.gap-others-unusual-occurrence.batch_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.batch.valid && captureForm.controls.batch.dirty && captureForm.controls.batch.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s12 m12 l12')
              +textArea("Description", false, "description", "description", null)([length]="maxLengths.description")
              +errorMessage("!captureForm.controls.description.valid && captureForm.controls.description.value.length > maxLengths.description", "{{ 'LogErrors.gap-others-unusual-occurrence.description_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.description.valid && captureForm.controls.description.dirty && captureForm.controls.description.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s12 m12 l12')
              +textArea("Corrective action", false, "corrective_action", "action", null)([length]="maxLengths.corrective_action")
              +errorMessage("!captureForm.controls.corrective_action.valid && captureForm.controls.corrective_action.value.length > maxLengths.corrective_action", "{{ 'LogErrors.gap-others-unusual-occurrence.action_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.corrective_action.valid && captureForm.controls.corrective_action.dirty && captureForm.controls.corrective_action.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s12 m12 l12')
              +textArea("External link", false, "album_url", "album_url", null)([length]="maxLengths.album_url")
              +errorMessage("!captureForm.controls.album_url.valid && captureForm.controls.album_url.value.length > maxLengths.album_url", "{{ 'LogErrors.gap-others-unusual-occurrence.url_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.album_url.valid && captureForm.controls.album_url.dirty && captureForm.controls.album_url.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
              //-+errorMessage("!captureForm.controls.album_url.valid && captureForm.controls.album_url.dirty && captureForm.controls.album_url.value.length > 0", "formato de URL no valido")
      +sendLogButton("{{ 'Log.send_report' | translate:lang }}")

//-include ../../../log-ionic-materialize.pug

//-+fullLogWrapper()
  div(*ngIf="showLog == true")
    log-header([log]="logHeaderData")
    form([formGroup]='captureForm', (ngSubmit)='save(myForm)')
      +card(true)
        +cardContent()
          +row()
            +col()(class='s4 m4 l4')
              +select(null, null, "shift_id", null, "shift", "'Shift'")
                +option("{{shift.name}}", "shift.shift_id", "{{first}}", false)(*ngFor='let shift of log.items.shifts; let first = first')
            +col()(class='s4 m4 l4')
              +timeInput(true, "Time", "time", "time", null, null)
            +col()(class='s4 m4 l4')
              +dateInput(true, "Date of occurrence", "incident_date", "date", null, null)
          +row()
            +col()(class='s4 m4 l4')
              +textInput("Production area", false, "area_id", "text", "production_area", null)
            +col()(class='s4 m4 l4')
              +textInput("Product", false, "product_id", "text", "product", null)
            +col()(class='s4 m4 l4')
              +textInput("Batch", false, "batch_id", "text", "batch", null)
          +row()
            +col()(class='s12 m12 l12')
              +textArea("Description", false, "description_id", "description", null)
          +row()
            +col()(class='s12 m12 l12')
              +textArea("Corrective action", false, "corrective_action", "action", null)
          +row()
            +col()(class='s12 m12 l12')
              +textArea("External link", false, "album_url", "album_url", null)
      +sendLogButton("{{ 'Log.send_report' | translate:lang }}")