include ../../../log-ionic-materialize.pug

mixin fieldResolver(index)
  div([ngSwitch]='field.field_id', [formGroup]='itemForm.controls.entries.controls[' + index + ']')&attributes(attributes)
    div(*ngSwitchCase='1')
      +textInput("{{ 'Log.voltage_reading' | translate:lang }}", null, "reading", "number", "reading_{{item.id}}" , null)
    div(*ngSwitchCase='2')
      +textInput("{{ 'Log.ph' | translate:lang }}", null, "ph", "number", "pH_{{item.id}}" , null)
    div(*ngSwitchCase='3')
      +textInput("{{ 'Log.orp' | translate:lang }}", null, "orp", "number", "orp_{{item.id}}" , null)
    div(*ngSwitchCase='4')
      +textInput("{{ 'Log.temperature' | translate:lang }}", null, "temperature", "number", "temperature_{{item.id}}" , null)
    div(*ngSwitchCase='5')
      +textInput("{{ 'Log.corrective_action' | translate:lang }}", null, "corrective_action", "text", "corrective_action_{{item.id}}" , null)([length]="maxLengths.corrective_action")
    div(*ngSwitchCase='6')
      +textInput("{{ 'Log.product' | translate:lang }}", null, "product", "text", "product_{{item.id}}" , null)([length]="maxLengths.product")
    div(*ngSwitchCase='7')
      +textInput("{{ 'Log.batch' | translate:lang }}", null, "lot", "text", "lot_{{item.id}}" , null)([length]="maxLengths.lot")
    div(*ngSwitchCase='8')
      +textInput("{{ 'Log.parcel' | translate:lang }}", null, "parcel", "text", "parcel_{{item.id}}" , null)([length]="maxLengths.parcel")
    div(*ngSwitchCase='9')
      +textInput("{{ 'Log.reference' | translate:lang }}", null, "reference", "text", "reference_{{item.id}}" , null)([length]="maxLengths.reference")
    div(*ngSwitchCase='10')
      +textInput("{{ 'Log.total_chlorine' | translate:lang }}", null, "total_chlorine", "number", "total_chlorine_{{item.id}}" , null)
    div(*ngSwitchCase='11')
      +textInput("{{ 'Log.free_chlorine' | translate:lang }}", null, "free_chlorine", "number", "free_chlorine_{{item.id}}" , null)
    div(*ngSwitchCase='12')
      +textInput("{{ 'Log.rinse' | translate:lang }}", null, "rinse", "number", "rinse_{{item.id}}" , null)
    div(*ngSwitchCase='13')
      +checkbox("Pas√≥", null, "status", "status_{{item.id}}")
    div(*ngSwitchDefault)

mixin testButtons()
  +row()
    +col()(class="s1 m1 l1 offset-s10 offset-m10 offset-l10")
      button.green(mz-button, type='button', float='true', (click)='onEntryAdd()')
        i(mz-icon-mdi, [icon]="'plus'")
    +col()(class="s1 m1 l1")
      button.red(mz-button, type='button', float='true', (click)='onEntryRemove()', [disabled]="itemForm.controls.entries.controls.length <= 1")
        i(mz-icon-mdi, [icon]="'minus'")

+card()
  +cardHeader('{{item.name}}')
  +cardContent()
    div(*ngFor='let fieldEntry of itemForm.controls.entries.controls; let j = index')
      +card()
        +cardContent()
          +row()
            +col()(class='s12 m6 l3', [formGroup]='itemForm.controls.entries.controls[j]')
              +timeInput(false, "Time", "time", "time", null, "langManager.messages.global.timePickerConfig")
            ng-template(ngFor, [ngForOf]='item.fields', let-field, let-i='index')
              +col()(class='s12 m6 l3', *ngIf='i >= 0 && i <=2')
                +fieldResolver('j')
          +row()(*ngIf='item.fields.length > 2')
            ng-template(ngFor, [ngForOf]='item.fields', let-field, let-i='index')
              +col()(class='s12 m6 l3', *ngIf='i >= 3 && i <=6')
                +fieldResolver('j')
          +row()(*ngIf='item.fields.length > 6')
            ng-template(ngFor, [ngForOf]='item.fields', let-field, let-i='index')
              +col()(class='s12 m6 l3', *ngIf='i >= 7 && i <=10')
                +fieldResolver('j')
          +row()(*ngIf='item.fields.length > 10')
            ng-template(ngFor, [ngForOf]='item.fields', let-field, let-i='index')
              +col()(class='s12 m6 l3', *ngIf='i >= 11 && i <=14')
                +fieldResolver('j')
    +testButtons()