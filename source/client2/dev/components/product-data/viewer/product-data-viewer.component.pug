mz-collapsible(#collapsible, [mode]="'expandable'")
  mz-collapsible-item([active]="'true'")
    //-mz-collapsible-item-header
      | Filtrado | Num. total de registros: {{data.length}} | Num. de registros filtrados: {{filteredData.length}} | Registros mostrados por p√°gina: {{pageSize}} | Indice inicial: {{this.currentPage * this.pageSize}} | Indice final: {{(this.currentPage + 1) * this.pageSize - 1 <= filteredData.length ? (this.currentPage + 1) * this.pageSize - 1: filteredData.length - 1}} | Total Recibido: {{totalReceived | number}} | Total Empacado: {{totalPacked | number}}
    mz-collapsible-item-header#product-filter-header(style="width: 100%")
      div(style="text-align: left; width: 50%; float: left;")
        i(mz-icon-mdi, [align]="'center'", [icon]="'chevron-down'", [size]="'24px'")
        | {{ 'ProductDataViewer.filter' | translate:lang }}
        i(mz-icon-mdi, [align]="'center'", [icon]="'filter'", [size]="'24px'")
      div(style="text-align: right; width: 50%; margin-left: 50%; font-size: 14px;", *ngIf='filteredData.length > 0 && showDetailedView === true')
        i(mz-icon-mdi, [align]="'center'", [icon]="'plus-box'", [size]="'24px'")
        | {{ 'ProductDataViewer.received' | translate:lang }}: 
        strong {{totalReceived | number}} | 
        | {{ 'ProductDataViewer.packed' | translate:lang }}: 
        strong {{totalPacked | number}} | 
        | {{ 'ProductDataViewer.performance' | translate:lang }}: 
        strong {{totalReceived != 0 ? (totalPacked / totalReceived).toFixed(2) : '0.00'}}
    mz-collapsible-item-body
      .row
        .col.s6.m6.l6
          mz-datepicker-container
            i(mz-icon-mdi, mz-input-prefix, [icon]="'calendar'")
            input#start-date(#start_picker, mz-datepicker, label="{{ 'ProductDataViewer.start_date' | translate:lang }}", type="text", [options]="datePickerConfig", [(ngModel)]="startDate")
        .col.s6.m6.l6
          mz-datepicker-container
            i(mz-icon-mdi, mz-input-prefix, [icon]="'calendar'")
            input#end-date(#end_picker, mz-datepicker, label="{{ 'ProductDataViewer.final_date' | translate:lang }}", type="text", [options]="datePickerConfig", [(ngModel)]="endDate")
      .row
        .col.s3.m3.l3
          mz-select-container
            select(mz-select, id='zone-select', label="{{ 'ProductDataViewer.zone' | translate:lang }}", [(ngModel)]="autocompleteZones.current", (change)='onAutocompleteChange($event, autocompleteZones)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteZones.arr", [value]="opt") {{opt}}
        .col.s3.m3.l3
          mz-select-container
            select(mz-select, id='key-select', label="{{ 'ProductDataViewer.producer' | translate:lang }}", [(ngModel)]="autocompleteKeys.current", (change)='onAutocompleteChange($event, autocompleteKeys)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteKeys.arr", [value]="opt") {{opt}}
        .col.s3.m3.l3
          mz-select-container
            select(mz-select, id='parcel-select', label="{{ 'ProductDataViewer.parcel' | translate:lang }}", [(ngModel)]="autocompleteParcels.current", (change)='onAutocompleteChange($event, autocompleteParcels)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteParcels.arr", [value]="opt") {{opt}}
        .col.s3.m3.l3
          mz-select-container
            select(mz-select, id='lot-select', label="{{ 'ProductDataViewer.lot' | translate:lang }}", [(ngModel)]="autocompleteLots.current", (change)='onAutocompleteChange($event, autocompleteLots)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteLots.arr", [value]="opt") {{opt}}
      .row
        .col.s2.m2.l2
          mz-select-container
            select(mz-select, id='group-select', label="{{ 'ProductDataViewer.group' | translate:lang }}", [(ngModel)]="autocompleteTraceability.current", (change)='onAutocompleteChange($event, autocompleteTraceability)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteTraceability.arr", [value]="opt") {{opt}}
        .col.s2.m2.l2
          mz-select-container
            select(mz-select, id='variety-select', label="{{ 'ProductDataViewer.variety' | translate:lang }}", [(ngModel)]="autocompleteVarieties.current", (change)='onAutocompleteChange($event, autocompleteVarieties)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteVarieties.arr", [value]="opt") {{opt}}
        .col.s2.m2.l2
          mz-select-container
            select(mz-select, id='product-select', label="{{ 'ProductDataViewer.type' | translate:lang }}", [(ngModel)]="autocompleteProducts.current", (change)='onAutocompleteChange($event, autocompleteProducts)')
              option([value]="''") {{ 'ProductDataViewer.all' | translate:lang }}
              option(*ngFor="let opt of autocompleteProducts.arr", [value]="opt") {{opt}}
        .col.s2.m2.l2
          mz-input-container
            input#batch-input(mz-input, label="{{ 'ProductDataViewer.batch' | translate:lang }}", placeholder="{{ 'ProductDataViewer.batch' | translate:lang }}", type='text', autocomplete='off', [autocomplete]='autocompleteBatches', (change)='onAutocompleteChange($event, autocompleteBatches)', [(ngModel)]='autocompleteBatches.current')
        .col.s2.m2.l2
          mz-input-container
            input#id-input(mz-input, label="{{ 'ProductDataViewer.id' | translate:lang }}", placeholder="{{ 'ProductDataViewer.id' | translate:lang }}", type='text', autocomplete='off', [autocomplete]='autocompleteIDs', (change)='onAutocompleteChange($event, autocompleteIDs)', [(ngModel)]='autocompleteIDs.current')
        .col.s2.m2.l2
          mz-input-container
            input#shipping-input(mz-input, label="{{ 'ProductDataViewer.shipping' | translate:lang }}", placeholder="{{ 'ProductDataViewer.shipping' | translate:lang }}", type='text', autocomplete='off', [autocomplete]='autocompleteShipments', (change)='onAutocompleteChange($event, autocompleteShipments)', [(ngModel)]='autocompleteShipments.current')
      .row
        .col.s12.m6.l3
          .center
            button(mz-button, (click)="cleanFilters()")
              i(mz-icon-mdi, [align]="'right'", [icon]="'filter-remove'", [size]="'24px'")
              | {{ 'ProductDataViewer.restart' | translate:lang }}
        .col.s12.m6.l3
          .center
            button(mz-button, (click)="showSummary()")
              i(mz-icon-mdi, [align]="'right'", [icon]="'file-document-box'", [size]="'24px'")
              | {{ 'ProductDataViewer.summary' | translate:lang }}
        .col.s12.m6.l3
          .center
            button(mz-button, (click)="showDetails()")
              i(mz-icon-mdi, [align]="'right'", [icon]="'table-large'", [size]="'24px'")
              | {{ 'ProductDataViewer.details' | translate:lang }}
        .col.s12.m6.l3
          .center
            button(mz-button, (click)="exportCSV()", [disabled]="filteredData.length == 0 || showDetailedView === null")
              i(mz-icon-mdi, [align]="'right'", [icon]="'download'", [size]="'24px'")
              | {{ 'ProductDataViewer.download' | translate:lang }}
div
  table.ugly-ass-table(style='display: block; overflow: scroll; height: calc(100vh - 200px);', *ngIf='filteredData.length > 0 && showDetailedView == true')
    thead
      tr
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.id' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.date' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.producer' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.variety' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.received_abbr' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.packed_abbr' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.kilos' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.good_abbr' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.zone' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.key' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.lot' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.parcel' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.group' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.bol' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.batch' | translate:lang }}
        th.slim-table-cell.no-wrap-table-cell {{ 'ProductDataViewer.shipping' | translate:lang }}
    tbody
      ng-template(ngFor, [ngForOf]='currentData', let-d, let-i='index')
        tr([ngClass]="{'received': d['Rec'] && (d['Batch'] != autocompleteBatches.current || d['Batch'] == null || d['Batch'] == ''), 'highlightrow': d['Batch']!= null && d['Batch'] != '' && d['Batch'] == autocompleteBatches.current}")
          td.slim-table-cell.no-wrap-table-cell {{d['ID_Cosecha']}}
          td.slim-table-cell.no-wrap-table-cell {{formatDate(d['Fecha']) | l10nDate:defaultLocale:monthOptions | slice:0:3 | titlecase}} {{formatDate(d['Fecha']) | l10nDate:defaultLocale:dayOptions}}, {{formatDate(d['Fecha']) | l10nDate:defaultLocale:yearOptions}}
          //-td.slim-table-cell.no-wrap-table-cell {{formatDate(d['Fecha']) | l10nDate:defaultLocale:'MMMM' | slice:0:3 | titlecase }} {{formatDate(d['Fecha']) | l10nDate:defaultLocale:'d'}}, {{formatDate(d['Fecha']) | l10nDate:defaultLocale:'yyyy' | slice:2:4}}
          td.slim-table-cell.no-wrap-table-cell {{d['C_Producto']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Variedad']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Rec']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Emp']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Kilos']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Bueno']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Zona']}}
          td.slim-table-cell.no-wrap-table-cell {{d['C_Agricultor']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Lote']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Parcela']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Grupo']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Bol']}}
          td.slim-table-cell.no-wrap-table-cell {{d['Batch']}}
          td.slim-table-cell.no-wrap-table-cell {{d['nCamion']}}
  .center(*ngIf='filteredData.length > 0 && showDetailedView === true')
    button.green(mz-button, float='true', (click)='goToFirst()', [disabled]='currentPage == 0')
      i(mz-icon-mdi, [align]="'right'", [icon]="'rewind'", [size]="'36px'")
    button.green(mz-button, float='true', (click)='prevPage()', [disabled]='currentPage == 0')
      i(mz-icon-mdi, [align]="'right'", [icon]="'play'", [size]="'36px'", [flip]="'h'")
    | {{ 'ProductDataViewer.page' | translate:lang }} {{currentPage + 1}} {{ 'ProductDataViewer.of' | translate:lang }} {{(filteredData.length - (filteredData.length % pageSize)) / pageSize + 1}}
    button.green(mz-button, float='true', (click)='nextPage()', [disabled]='(currentPage + 1) * pageSize > filteredData.length')
      i(mz-icon-mdi, [align]="'right'", [icon]="'play'", [size]="'36px'")
    button.green(mz-button, float='true', (click)='goToLast()', [disabled]='(currentPage + 1) * pageSize > filteredData.length')
      i(mz-icon-mdi, [align]="'right'", [icon]="'fast-forward'", [size]="'36px'")
  div(*ngIf="filteredData.length == 0 && noFilters == false")
    h5
      i.red-text(mz-icon-mdi, [align]="'center'", [icon]="'alert-circle'", [size]="'42px'")
      | {{ 'ProductDataViewer.errorMessage' | translate:lang }}
  div(*ngIf="noFilters == true")
    h5
      i.blue-text(mz-icon-mdi, [align]="'center'", [icon]="'alert-circle'", [size]="'42px'")
      | {{ 'ProductDataViewer.filterMessage' | translate:lang }}
  div(*ngIf='filteredData.length > 0 && showDetailedView === false')
    mz-card
      mz-card-title 
        | {{ 'ProductDataViewer.received' | translate:lang }}: 
        strong {{totalReceived | number}}
    mz-card
      mz-card-title
        | {{ 'ProductDataViewer.packed' | translate:lang }}: 
        strong {{totalPacked | number}}
    mz-card
      mz-card-title
        | {{ 'ProductDataViewer.performance' | translate:lang }}: 
        strong {{totalReceived != 0 ? (totalPacked / totalReceived).toFixed(2) : '0.00'}}
