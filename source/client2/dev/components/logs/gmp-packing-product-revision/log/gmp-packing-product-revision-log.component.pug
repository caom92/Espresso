include ../../../log-ionic-materialize.pug

+fullLogWrapper()
  div(*ngIf='showLog == true')
    block header
      log-header([log]='logHeaderData', [dateGroup]='captureForm')
    form((ngSubmit)='save()', id='aged_product')
      +card(true)(*ngFor="let entry of captureForm.controls.entries.controls; let i = index")
        +cardContent()([formGroup]="captureForm.controls.entries.controls[i]")
          +row()
            +col()(class='s6 m6 l6')
              +textInput("{{ 'Log.batch' | translate:lang }}", false, "batch", "text", "batch_{{i + 1}}", null)([length]="maxLengths.batch")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.batch.valid && captureForm.controls.entries.controls[i].controls.batch.value.length > maxLengths.batch", "{{ 'LogErrors.gmp-packing-product-revision.batch_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.batch.valid && captureForm.controls.entries.controls[i].controls.batch.dirty && captureForm.controls.entries.controls[i].controls.batch.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textInput("{{ 'Log.production_area' | translate:lang }}", false, "production_area", "text", "production_area_{{i + 1}}", null)([length]="maxLengths.production_area")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.production_area.valid && captureForm.controls.entries.controls[i].controls.production_area.value.length > maxLengths.production_area", "{{ 'LogErrors.gmp-packing-product-revision.production_area_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.production_area.valid && captureForm.controls.entries.controls[i].controls.production_area.dirty && captureForm.controls.entries.controls[i].controls.production_area.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +textInput("{{ 'Log.suppliers' | translate:lang }}", false, "supplier", "text", "vendor_{{i + 1}}", null)([length]="maxLengths.supplier")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.supplier.valid && captureForm.controls.entries.controls[i].controls.supplier.value.length > maxLengths.supplier", "{{ 'LogErrors.gmp-packing-product-revision.supplier_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.supplier.valid && captureForm.controls.entries.controls[i].controls.supplier.dirty && captureForm.controls.entries.controls[i].controls.supplier.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("{{ 'Log.products' | translate:lang }}", false, "product", "text", "item_{{i + 1}}", null)([length]="maxLengths.product")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.product.valid && captureForm.controls.entries.controls[i].controls.product.value.length > maxLengths.product", "{{ 'LogErrors.gmp-packing-product-revision.product_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.product.valid && captureForm.controls.entries.controls[i].controls.product.dirty && captureForm.controls.entries.controls[i].controls.product.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("{{ 'Log.customers' | translate:lang }}", false, "customer", "text", "origin_{{i + 1}}", null)([length]="maxLengths.customer")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.customer.valid && captureForm.controls.entries.controls[i].controls.customer.value.length > maxLengths.customer", "{{ 'LogErrors.gmp-packing-product-revision.customer_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.customer.valid && captureForm.controls.entries.controls[i].controls.customer.dirty && captureForm.controls.entries.controls[i].controls.customer.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +select("{{ 'Log.quality' | translate:lang }}", null, "quality_type_id", null, "quality_{{i + 1}}", "{{ 'Log.quality' | translate:lang }}")
                +option("{{quality['name_' + lang]}}", "quality.id", null, false)(*ngFor='let quality of log.log_info.quality_types')
              +errorMessage("!captureForm.controls.entries.controls[i].controls.quality_type_id.valid && captureForm.controls.entries.controls[i].controls.quality_type_id.dirty", "{{ 'LogErrors.gmp-packing-product-revision.quality_type_id_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +textInput("{{ 'Log.origin' | translate:lang }}", false, "origin", "text", "origin_{{i + 1}}", null)([length]="maxLengths.origin")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.origin.valid && captureForm.controls.entries.controls[i].controls.origin.value.length > maxLengths.origin", "{{ 'LogErrors.gmp-packing-product-revision.origin_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.origin.valid && captureForm.controls.entries.controls[i].controls.origin.dirty && captureForm.controls.entries.controls[i].controls.origin.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +dateInput(false, "{{ 'Log.packing_date' | translate:lang }}", "expiration_date", "date_{{i + 1}}", null, "langManager.messages.global.datePickerConfig")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.expiration_date.valid && captureForm.controls.entries.controls[i].controls.expiration_date.dirty && captureForm.controls.entries.controls[i].controls.expiration_date.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s6 m6 l6')
              +textInput("{{ 'Log.washing_temp' | translate:lang }}", false, "water_temperature", "number", "water_{{i + 1}}", null)
              +errorMessage("!captureForm.controls.entries.controls[i].controls.water_temperature.valid && captureForm.controls.entries.controls[i].controls.water_temperature.dirty", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textInput("{{ 'Log.packing_temp' | translate:lang }}", false, "product_temperature", "number", "packed_{{i + 1}}", null)
              +errorMessage("!captureForm.controls.entries.controls[i].controls.product_temperature.valid && captureForm.controls.entries.controls[i].controls.product_temperature.dirty", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
          +row()
            +col()(class='s4 m4 l4')
              +radioGroup("{{ 'Log.correct_weight' | translate:lang }}", false, "is_weight_correct")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "correct_weight_yes_{{i + 1}}", "weight_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_weight_correct', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "correct_weight_no_{{i + 1}}", "weight_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_weight_correct', [value]='false')
              +errorMessage("!captureForm.controls.entries.controls[i].controls.is_weight_correct.valid && captureForm.controls.entries.controls[i].controls.is_weight_correct.dirty", "{{ 'LogErrors.gmp-packing-product-revision.is_weight_correct_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +radioGroup("{{ 'Log.correct_label' | translate:lang }}", false, "is_label_correct")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "label_yes_{{i + 1}}", "label_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_label_correct', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "label_no_{{i + 1}}", "label_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_label_correct', [value]='false')
              +errorMessage("!captureForm.controls.entries.controls[i].controls.is_label_correct.valid && captureForm.controls.entries.controls[i].controls.is_label_correct.dirty", "{{ 'LogErrors.gmp-packing-product-revision.is_label_correct_required' | translate:lang }}")
            +col()(class='s4 m4 l4')
              +radioGroup("{{ 'Log.correct_traceability' | translate:lang }}", false, "is_trackable")
                +radio("{{ 'Log.yes' | translate:lang }}", false, "true", false, false, "traceability_yes_{{i + 1}}", "traceable_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_trackable', [value]='true')
                +radio("{{ 'Log.no' | translate:lang }}", false, "false", false, false, "traceability_no_{{i + 1}}", "traceable_{{i + 1}}")([formControl]='captureForm.controls.entries.controls[i].controls.is_trackable', [value]='false')
              +errorMessage("!captureForm.controls.entries.controls[i].controls.is_trackable.valid && captureForm.controls.entries.controls[i].controls.is_trackable.dirty", "{{ 'LogErrors.gmp-packing-product-revision.is_trackable_required' | translate:lang }}")
          +row()
            +col()(class='s6 m6 l6')
              +textArea("{{ 'Log.comment' | translate:lang }}", false, "notes", "notes_{{i + 1}}", null)([length]="maxLengths.notes")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.notes.valid && captureForm.controls.entries.controls[i].controls.notes.value.length > maxLengths.notes", "{{ 'LogErrors.gmp-packing-product-revision.notes_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.notes.valid && captureForm.controls.entries.controls[i].controls.notes.dirty && captureForm.controls.entries.controls[i].controls.notes.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
            +col()(class='s6 m6 l6')
              +textArea("{{ 'Log.external_url' | translate:lang }}", false, "album_url", "album_url_{{i + 1}}", null)([length]="maxLengths.album_url")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.album_url.valid && captureForm.controls.entries.controls[i].controls.album_url.value.length > maxLengths.album_url", "{{ 'LogErrors.gmp-packing-product-revision.album_url_max' | translate:lang }}")
              +errorMessage("!captureForm.controls.entries.controls[i].controls.album_url.valid && captureForm.controls.entries.controls[i].controls.album_url.dirty && captureForm.controls.entries.controls[i].controls.album_url.value.length == 0", "{{ 'LogErrors.generic.generic_required' | translate:lang }}")
      block entryControls
        +row()
          +col()(class="s1 m1 l1 offset-s10 offset-m10 offset-l10")
            button.green(mz-button, type='button', float='true', (click)='addEntry()')
              i(mz-icon-mdi, [icon]="'plus'")
          +col()(class="s1 m1 l1")
            button.red(mz-button, type='button', float='true', (click)='removeEntry()', [disabled]="captureForm.controls.entries.controls.length <= 1")
              i(mz-icon-mdi, [icon]="'minus'")
      block buttonRow
        +sendLogButton("{{ 'Log.send_report' | translate:lang }}")(form="aged_product")
